* packages in java are collection of similar types of classes,interfaces and methods.

-uses of packages:-
  1)packages are used for preventing naming conflicts (when two classes are of same name its easier to identify based on
their package name)

  2)providing control access of class methods and interfaces(where to use and when to use)
  - A protected member is accessible by classes in the same package and its subclasses.
  - A default member (without any access specifier) is accessible by classes in the same package only.

  3)Subpackages: Packages that are inside another package are the subpackages.
               : These are not imported by default,they have to imported explicitly.



creation of package--------
**The package keyword is used to create a package in java.

/*
package mypack;
public class Simple{
 public static void main(String args[]){
    System.out.println("Welcome to package");
   }
}
*/

                                     * How to access package from another package? *

There are three ways to access the package from outside the package.

---import package.*;
---import package.classname;
---fully qualified name.


                                                 1) Using packagename.*

If you use package.* then all the classes and interfaces of this package will be accessible but not subpackages.

The import keyword is used to make the classes and interface of another package accessible to the current package.

                                                 2) Using packagename.classname

If you import package.classname then only declared class of this package will be accessible.

                                                 3) Using fully qualified name
If you use fully qualified name then only declared class of this package will be accessible.
Now there is no need to import.
But you need to use fully qualified name every time when you are accessing the class or interface.



